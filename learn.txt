git log --pretty=oneline

git reset --hard commit_id

git diff HEAD -- readme.txt



我实在是看不下去了，一会儿暂存区一会儿版本库的，请先分清概念，经过我的实验，提交代码的更改一共分2个阶段。

1).从工作目录，提交到stage。
2).从stage提交到master。

从工作目录提交到stage，需要用add或者rm命令，只提交到stage，而没有提交到master，是不会自动同步到master的。

从stage提交到master用commit命令。

退回也是要分两步，一个是从master退回到stage，然后再从stage退回到工作目录。

对于还没有提交到stage的，可以从stage用checkout命令退回，这一步会取stage中的文件状态，覆盖掉工作目录中文件的状态，跟master完全没关系。

对于已经到达stage的，想把state中的文件状态用master中的覆盖掉，就用reset命令，这样就把stage中修改用master的状态覆盖掉了，完全跟工作目录没关系

$ ssh-keygen -t rsa -C "youremail@example.com"
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：

然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：
首先，登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库：

git remote add origin git@github.com:michaelliao/learngit.git

##################################

一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；

 查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>
########################################
git log --graph --pretty=oneline --abbrev-commit 


另一种方式是用git stash pop，恢复的同时把stash内容也删了：
